{
  "name": "cab_service_saga_cancellation_wf",
  "description": "Cancellation of ride",
  "version": 1,
  "tasks": [
    {
      "name": "json_transform_task",
      "taskReferenceName": "json_transform_task_ref",
      "inputParameters": {
        "parent": "${workflow.input.failedWorkflow}",
        "queryExpression": "{ bookingId: .parent.output.bookingId, failedTaskName: .parent.failedReferenceTaskNames[0] }"
      },
      "type": "JSON_JQ_TRANSFORM",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "onStateChange": {}
    },
    {
      "name": "switch_rollback_from_task",
      "taskReferenceName": "switch_rollback_from_task_ref",
      "inputParameters": {
        "failedTaskName": "${json_transform_task_ref.output.result.failedTaskName}"
      },
      "type": "SWITCH",
      "decisionCases": {
        "make_payment_ref": [
          {
            "name": "cancel_payment",
            "taskReferenceName": "cancel_payment_ref",
            "inputParameters": {
              "bookingId": "${json_transform_task_ref.output.result.bookingId}"
            },
            "type": "SIMPLE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
          },
          {
            "name": "cancel_driver_assignment",
            "taskReferenceName": "cancel_driver_assignment_ref",
            "inputParameters": {
              "bookingId": "${json_transform_task_ref.output.result.bookingId}"
            },
            "type": "SIMPLE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
          }
        ],
        "assign_driver_ref": [
          {
            "name": "cancel_driver_assignment",
            "taskReferenceName": "cancel_driver_assignment_1_ref",
            "inputParameters": {
              "bookingId": "${json_transform_task_ref.output.result.bookingId}"
            },
            "type": "SIMPLE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
          }
        ]
      },
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "evaluatorType": "value-param",
      "expression": "failedTaskName",
      "onStateChange": {}
    },
    {
      "name": "cancel_booking",
      "taskReferenceName": "cancel_booking_ref",
      "inputParameters": {
        "bookingId": "${workflow.input.failedWorkflow.output.bookingId}"
      },
      "type": "SIMPLE",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "onStateChange": {}
    },
    {
      "name": "fork_task_failure_notifications",
      "taskReferenceName": "fork_task_failure_notifications_ref",
      "inputParameters": {},
      "type": "FORK_JOIN",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [
        [
          {
            "name": "notify_customer",
            "taskReferenceName": "notify_customer_failure_ref",
            "inputParameters": {
              "bookingId": "${workflow.input.failedWorkflow.output.bookingId}"
            },
            "type": "SIMPLE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
          }
        ],
        [
          {
            "name": "notify_driver",
            "taskReferenceName": "notify_driver_failure_ref",
            "inputParameters": {
              "bookingId": "${workflow.input.failedWorkflow.output.bookingId}"
            },
            "type": "SIMPLE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
          }
        ]
      ],
      "startDelay": 0,
      "joinOn": [],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "onStateChange": {}
    },
    {
      "name": "join_task_failure_notifications",
      "taskReferenceName": "join_task_failure_notifications_ref",
      "inputParameters": {},
      "type": "JOIN",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [
        "notify_customer_failure_ref",
        "notify_driver_failure_ref"
      ],
      "optional": false,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "onStateChange": {}
    }
  ],
  "inputParameters": [
    ""
  ],
  "outputParameters": {},
  "failureWorkflow": "",
  "schemaVersion": 2,
  "restartable": true,
  "workflowStatusListenerEnabled": false,
  "ownerEmail": "tester@email.com",
  "timeoutPolicy": "ALERT_ONLY",
  "timeoutSeconds": 0,
  "variables": {},
  "inputTemplate": {},
  "onStateChange": {}
}